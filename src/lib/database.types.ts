
export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      employees: {
        Row: {
          id: string
          name: string
          address: string | null
          contact_info: string | null
          role: string | null
          start_date: string // date
          created_at: string // timestamp with time zone
        }
        Insert: {
          id?: string // Default to UUID generated by Supabase
          name: string
          address?: string | null
          contact_info?: string | null
          role?: string | null
          start_date: string // date
          created_at?: string // timestamp with time zone, defaults to now()
        }
        Update: {
          id?: string
          name?: string
          address?: string | null
          contact_info?: string | null
          role?: string | null
          start_date?: string // date
          created_at?: string
        }
        Relationships: []
      }
      task_types: {
        Row: {
          id: string
          name: string
          description: string | null
          unit_price: number
          created_at: string
        }
        Insert: {
          id?: string
          name: string
          description?: string | null
          unit_price: number
          created_at?: string
        }
        Update: {
          id?: string
          name?: string
          description?: string | null
          unit_price?: number
          created_at?: string
        }
        Relationships: []
      }
      assigned_tasks: {
        Row: {
          id: string
          employee_id: string
          task_type_id: string
          quantity_completed: number
          date_assigned: string // date
          total_payment: number
          status: string // e.g., "Completed", "Pending Payment"
          created_at: string
        }
        Insert: {
          id?: string
          employee_id: string
          task_type_id: string
          quantity_completed: number
          date_assigned: string // date
          total_payment: number
          status: string
          created_at?: string
        }
        Update: {
          id?: string
          employee_id?: string
          task_type_id?: string
          quantity_completed?: number
          date_assigned?: string
          total_payment?: number
          status?: string
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "assigned_tasks_employee_id_fkey"
            columns: ["employee_id"]
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "assigned_tasks_task_type_id_fkey"
            columns: ["task_type_id"]
            referencedRelation: "task_types"
            referencedColumns: ["id"]
          }
        ]
      }
      payments: {
        Row: {
          id: string
          employee_id: string
          amount: number
          payment_type: string // e.g., "Withdrawal", "Advance"
          date: string // date
          notes: string | null
          created_at: string
        }
        Insert: {
          id?: string
          employee_id: string
          amount: number
          payment_type: string
          date: string // date
          notes?: string | null
          created_at?: string
        }
        Update: {
          id?: string
          employee_id?: string
          amount?: number
          payment_type?: string
          date?: string
          notes?: string | null
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "payments_employee_id_fkey"
            columns: ["employee_id"]
            referencedRelation: "employees"
            referencedColumns: ["id"]
          }
        ]
      }
      sales: {
        Row: {
          id: string
          product_name: string
          amount: number
          date: string // date
          receipt_number: string | null
          created_at: string
        }
        Insert: {
          id?: string
          product_name: string
          amount: number
          date: string // date
          receipt_number?: string | null
          created_at?: string
        }
        Update: {
          id?: string
          product_name?: string
          amount?: number
          date?: string
          receipt_number?: string | null
          created_at?: string
        }
        Relationships: []
      }
      expenses: {
        Row: {
          id: string
          description: string
          amount: number
          date: string // date
          receipt_number: string | null
          created_at: string
        }
        Insert: {
          id?: string
          description: string
          amount: number
          date: string // date
          receipt_number?: string | null
          created_at?: string
        }
        Update: {
          id?: string
          description?: string
          amount?: number
          date?: string
          receipt_number?: string | null
          created_at?: string
        }
        Relationships: []
      }
      users: {
        Row: {
          id: string
          name: string
          email: string
          role: string // Admin, Manager, Staff
          status: string // Active, Inactive
          created_at: string
        }
        Insert: {
          id?: string
          name: string
          email: string
          role: string
          status: string
          created_at?: string
        }
        Update: {
          id?: string
          name?: string
          email?: string
          role?: string
          status?: string
          created_at?: string
        }
        Relationships: []
      }
      roles: {
        Row: {
          id: string
          name: string
          description: string | null
          status: string // Active, Inactive
          permissions: string[] | null
          created_at: string
        }
        Insert: {
          id?: string
          name: string
          description?: string | null
          status: string
          permissions?: string[] | null
          created_at?: string
        }
        Update: {
          id?: string
          name?: string
          description?: string | null
          status?: string
          permissions?: string[] | null
          created_at?: string
        }
        Relationships: []
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      [_ in never]: never
    }
    Enums: {
      [_ in never]: never
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}
